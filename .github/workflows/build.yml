name: build

on:
  push:
    branches:
    - main
  pull_request: { }

defaults:
  run:
    shell: bash

jobs:
  build:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Setup node 12
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
        fetch-depth: 1


    - name: Install dependencies
      run: |
        yarn install

    - name: Build
      run: |
        npm run build


    - name: Push back
      env:
        PUSH_BACK_TOKEN: ${{ secrets.PUSH_BACK_TOKEN }}
      if: ${{ env.PUSH_BACK_TOKEN && github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') }}
      run: |
        REMOTE_URL=$(git config --get remote.origin.url)
        REMOTE_HEAD_COMMIT_SHA=$(git ls-remote "$REMOTE_URL" "${{ github.ref }}" | awk '{ print $1}')
        if [ "$REMOTE_HEAD_COMMIT_SHA" != "${{ github.sha }}" ]; then
          echo "::warning::Remote repository branch has been changed, skipping push back"
          exit 0
        fi

        git config --unset-all "http.https://github.com/.extraheader"
        git remote set-url origin "https://${{ env.PUSH_BACK_TOKEN }}@github.com/${{ github.repository }}"
        git config user.name "${{ github.event.head_commit.committer.name }}"
        git config user.email "${{ github.event.head_commit.committer.email }}"

        echo "::group::Commit updated files during build"
        git add --all
        if git commit --quiet --no-status --no-edit -m "[push-back] Commit updated files during build" ; then
          git push origin "HEAD:${{ github.ref }}"
        fi
        echo "::endgroup::"

        if [ "${{github.ref == 'refs/heads/main'}}" == "true" ]; then
          echo "::group::Update tag"
          FULL_VERSION=$(jq -r '.version' package.json)
          if [ "$FULL_VERSION" == "null" ]; then
            echo "::error::Version can't be read from package.json file"
            exit 1
          fi
          echo "Version from package.json: $FULL_VERSION"
          MAJOR_VERSION=$(echo "$FULL_VERSION" | cut -f1 -d".")
          echo "Major version: $MAJOR_VERSION"
          git tag --force "v$MAJOR_VERSION"
          git push --force origin "v$MAJOR_VERSION"
          echo "::endgroup::"
        fi
