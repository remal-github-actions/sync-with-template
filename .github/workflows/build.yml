name: build

on:
  push:
    branches:
    - main
  pull_request: { }

defaults:
  run:
    shell: bash

jobs:
  build:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[skip ci]') && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Setup node 12
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: recursive
        lfs: true
        fetch-depth: 1


    - name: Install dependencies
      run: |
        yarn install

    - name: Build
      run: |
        npm run build


    - name: Push back
      env:
        PUSH_BACK_TOKEN: ${{ secrets.PUSH_BACK_TOKEN }}
      if: ${{ env.PUSH_BACK_TOKEN && github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') }}
      uses: remal-github-actions/push-back@v1
      with:
        githubToken: ${{ env.PUSH_BACK_TOKEN }}
        message: '[push-back] Push-back updated files during build'


    - name: Read version
      id: readVersion
      uses: remal-github-actions/read-nodejs-package-version@v1

    - name: Create tag
      env:
        PUSH_BACK_TOKEN: ${{ secrets.PUSH_BACK_TOKEN }}
      if: ${{ env.PUSH_BACK_TOKEN && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: |
        REMOTE_URL=$(git config --get remote.origin.url)
        HEAD_COMMIT_SHA=$(git rev-parse HEAD)
        REMOTE_HEAD_COMMIT_SHA=$(git ls-remote "$REMOTE_URL" "${{ github.ref }}" | awk '{ print $1}')
        if [ "$REMOTE_HEAD_COMMIT_SHA" != "$HEAD_COMMIT_SHA" ]; then
          echo "::warning::Remote repository branch has been changed, skipping tag creation"
          exit 0
        fi

        git config --unset-all "http.https://github.com/.extraheader"
        git remote set-url origin "https://${{ env.PUSH_BACK_TOKEN }}@github.com/${{ github.repository }}"
        git config user.name "${{ github.event.head_commit.committer.name }}"
        git config user.email "${{ github.event.head_commit.committer.email }}"

        echo "::group::Create version tag"
        TAG="v${{ steps.readVersion.outputs.majorVersion }}"
        echo "Creating Git tag: $TAG"
        git tag --force "$TAG"
        git push --force origin "$TAG"
        echo "::endgroup::"
